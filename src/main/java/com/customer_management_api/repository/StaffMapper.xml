<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.customer_management_api.repository.StaffMapper">
    <resultMap id="Staff" type="com.customer_management_api.entity.Staff">
        <id property="id" column="ID"/>
        <result property="lastName" column="LAST_NAME"/>
        <result property="firstName" column="FIRST_NAME"/>
        <result property="email" column="EMAIL"/>
        <result property="password" column="PASSWORD"/>
        <result property="birthday" column="BIRTHDAY"/>
        <result property="storeId" column="STORE_ID"/>
        <result property="createdAt" column="CREATED_AT"/>
        <result property="updatedAt" column="UPDATED_AT"/>
        <collection property="store"
                    resultMap="com.customer_management_api.repository.StoreMapper.Store"
                    columnPrefix="STORE__"/>
    </resultMap>

    <select id="getStaffs" resultMap="Staff">
        SELECT
        STAFF.ID,
        STAFF.LAST_NAME,
        STAFF.FIRST_NAME,
        STAFF.EMAIL,
        STAFF.PASSWORD,
        STAFF.BIRTHDAY,
        STAFF.STORE_ID,
        STAFF.CREATED_AT,
        STAFF.UPDATED_AT,
        STORE.ID AS STORE__ID,
        STORE.NAME AS STORE__NAME,
        STORE.DESCRIPTION AS STORE__DESCRIPTION,
        STORE.CREATED_AT AS STORE__CREATED_AT,
        STORE.UPDATED_AT AS STORE__UPDATED_AT
        FROM STAFF
        INNER JOIN STORE
        ON STAFF.STORE_ID = STORE.ID
        WHERE STORE_ID = #{storeId}
    </select>

    <select id="getStaff" resultMap="Staff">
        SELECT
        STAFF.ID,
        STAFF.LAST_NAME,
        STAFF.FIRST_NAME,
        STAFF.EMAIL,
        STAFF.PASSWORD,
        STAFF.BIRTHDAY,
        STAFF.STORE_ID,
        STAFF.CREATED_AT,
        STAFF.UPDATED_AT,
        STORE.ID AS STORE__ID,
        STORE.NAME AS STORE__NAME,
        STORE.DESCRIPTION AS STORE__DESCRIPTION,
        STORE.CREATED_AT AS STORE__CREATED_AT,
        STORE.UPDATED_AT AS STORE__UPDATED_AT
        FROM STAFF
        INNER JOIN STORE
        ON STAFF.STORE_ID = STORE.ID
        WHERE STAFF.ID = #{id}
        AND STAFF.STORE_ID = #{storeId}
    </select>

    <select id="getStaffByEmail" resultMap="Staff">
        SELECT
        STAFF.ID,
        STAFF.LAST_NAME,
        STAFF.FIRST_NAME,
        STAFF.EMAIL,
        STAFF.PASSWORD,
        STAFF.BIRTHDAY,
        STAFF.STORE_ID,
        STAFF.CREATED_AT,
        STAFF.UPDATED_AT,
        STORE.ID AS STORE__ID,
        STORE.NAME AS STORE__NAME,
        STORE.DESCRIPTION AS STORE__DESCRIPTION,
        STORE.CREATED_AT AS STORE__CREATED_AT,
        STORE.UPDATED_AT AS STORE__UPDATED_AT
        FROM STAFF
        INNER JOIN STORE
        ON STAFF.STORE_ID = STORE.ID
        WHERE STAFF.EMAIL = #{email}
    </select>

    <insert id="createStaff" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO STAFF (EMAIL, PASSWORD, LAST_NAME, FIRST_NAME, BIRTHDAY, STORE_ID)
        VALUES (#{email}, #{password}, #{lastName}, #{firstName}, #{birthday}, #{storeId})
    </insert>

    <update id="updateStaff">
        UPDATE STAFF
        <set>
            <if test="email != null">EMAIL = #{email},</if>
            <if test="password != null">PASSWORD = #{password},</if>
            <if test="lastName != null">LAST_NAME = #{lastName},</if>
            <if test="firstName != null">FIRST_NAME = #{firstName},</if>
            <if test="birthday != null">BIRTHDAY = #{birthday},</if>
        </set>
        WHERE ID = #{id}
    </update>

    <delete id="deleteStaff">
        DELETE FROM STAFF
        WHERE ID = #{id}
    </delete>
</mapper>
